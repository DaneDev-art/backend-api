// ==========================================
// src/routes/products.js
// ==========================================
const express = require("express");
const router = express.Router();
const { verifyToken, verifyAdmin } = require("../middleware/auth.middleware");
const fileUpload = require("express-fileupload");
const productController = require("../controllers/productController");

// ==========================================
// âœ… Middleware pour gÃ©rer les fichiers
// ==========================================
router.use(
  fileUpload({
    useTempFiles: true,
    tempFileDir: "/tmp/",
  })
);

// ==========================================
// ðŸ”¹ ROUTES PRODUITS
// ==========================================

// âœ… Tous les produits (public, avec filtres)
router.get("/", productController.getAllProducts);

// âœ… Produits dâ€™un vendeur spÃ©cifique (public ou auth)
router.get("/seller/:sellerId", productController.getProductsBySeller);

// âœ… Ajouter un produit (vendeur connectÃ©)
router.post("/add", verifyToken, productController.addProduct);

// âœ… Modifier un produit (vendeur connectÃ©)
router.put("/update/:productId", verifyToken, productController.updateProduct);

// âœ… Supprimer un produit (vendeur connectÃ©)
router.delete("/remove/:productId", verifyToken, productController.deleteProduct);

// ==========================================
// ðŸ”¹ ROUTES ADMINISTRATEUR
// ==========================================

// âœ… Valider un produit (changer statut -> "validÃ©")
router.put(
  "/validate/:productId",
  verifyToken,
  verifyAdmin,
  productController.validateProduct || ((req, res) => res.status(501).json({ message: "Not implemented" }))
);

// ðŸš« Bloquer un produit (changer statut -> "bloquÃ©")
router.put(
  "/block/:productId",
  verifyToken,
  verifyAdmin,
  productController.blockProduct || ((req, res) => res.status(501).json({ message: "Not implemented" }))
);

// ==========================================
// âœ… Export du routeur
// ==========================================
module.exports = router;
